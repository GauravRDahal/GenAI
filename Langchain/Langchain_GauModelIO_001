{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14172,"status":"ok","timestamp":1691120318015,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"5870bPYViuTX","outputId":"14327d53-9e9d-4972-d166-c953ed62062d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting openai\n","  Downloading openai-0.27.8-py3-none-any.whl (73 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.6/73.6 kB\u001b[0m \u001b[31m967.1 kB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: requests>=2.20 in /usr/local/lib/python3.10/dist-packages (from openai) (2.27.1)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from openai) (4.65.0)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from openai) (3.8.5)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (1.26.16)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (2023.7.22)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (3.4)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (23.1.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (6.0.4)\n","Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (4.0.2)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (1.9.2)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (1.4.0)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (1.3.1)\n","Installing collected packages: openai\n","Successfully installed openai-0.27.8\n"]}],"source":["!pip install openai"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14730,"status":"ok","timestamp":1691120332727,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"fKtivmsCkPKJ","outputId":"8b16df4f-018e-4531-bb53-15edb568039c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting langchain\n","  Downloading langchain-0.0.251-py3-none-any.whl (1.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.4/1.4 MB\u001b[0m \u001b[31m5.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: PyYAML>=5.4.1 in /usr/local/lib/python3.10/dist-packages (from langchain) (6.0.1)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.0.19)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (3.8.5)\n","Requirement already satisfied: async-timeout<5.0.0,>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (4.0.2)\n","Collecting dataclasses-json<0.6.0,>=0.5.7 (from langchain)\n","  Downloading dataclasses_json-0.5.14-py3-none-any.whl (26 kB)\n","Collecting langsmith<0.1.0,>=0.0.11 (from langchain)\n","  Downloading langsmith-0.0.18-py3-none-any.whl (31 kB)\n","Requirement already satisfied: numexpr<3.0.0,>=2.8.4 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.8.4)\n","Requirement already satisfied: numpy<2,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain) (1.22.4)\n","Collecting openapi-schema-pydantic<2.0,>=1.2 (from langchain)\n","  Downloading openapi_schema_pydantic-1.2.4-py3-none-any.whl (90 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m90.0/90.0 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pydantic<2,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain) (1.10.12)\n","Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.27.1)\n","Requirement already satisfied: tenacity<9.0.0,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (8.2.2)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (23.1.0)\n","Requirement already satisfied: charset-normalizer<4.0,>=2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (2.0.12)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (6.0.4)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.9.2)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.4.0)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.3.1)\n","Collecting marshmallow<4.0.0,>=3.18.0 (from dataclasses-json<0.6.0,>=0.5.7->langchain)\n","  Downloading marshmallow-3.20.1-py3-none-any.whl (49 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.4/49.4 kB\u001b[0m \u001b[31m2.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting typing-inspect<1,>=0.4.0 (from dataclasses-json<0.6.0,>=0.5.7->langchain)\n","  Downloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n","Requirement already satisfied: typing-extensions>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<2,>=1->langchain) (4.7.1)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (1.26.16)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (2023.7.22)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (3.4)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain) (2.0.2)\n","Requirement already satisfied: packaging>=17.0 in /usr/local/lib/python3.10/dist-packages (from marshmallow<4.0.0,>=3.18.0->dataclasses-json<0.6.0,>=0.5.7->langchain) (23.1)\n","Collecting mypy-extensions>=0.3.0 (from typing-inspect<1,>=0.4.0->dataclasses-json<0.6.0,>=0.5.7->langchain)\n","  Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n","Installing collected packages: mypy-extensions, marshmallow, typing-inspect, openapi-schema-pydantic, langsmith, dataclasses-json, langchain\n","Successfully installed dataclasses-json-0.5.14 langchain-0.0.251 langsmith-0.0.18 marshmallow-3.20.1 mypy-extensions-1.0.0 openapi-schema-pydantic-1.2.4 typing-inspect-0.9.0\n"]}],"source":["!pip install langchain"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YXtIcXcKi2_t"},"outputs":[],"source":["f = open(\"/content/api_key.txt\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ppy55BeQi3BU"},"outputs":[],"source":["api_key = f.read()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2pB1fpBhi3F2"},"outputs":[],"source":["from langchain.llms import OpenAI"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JReXHDekkd5i"},"outputs":[],"source":["llm = OpenAI(openai_api_key= api_key)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"elapsed":464,"status":"ok","timestamp":1691049468175,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"AkaHIlgVkd8E","outputId":"46b1fa5c-9515-4921-e9fd-9226d339cf4c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["\" the world's deepest swimming pool is located in Poland and is 10 meters deep!\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":122}],"source":["llm(\"Here is a fun fact,\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3Bma2Rbakd-s"},"outputs":[],"source":["result = llm.generate([\"This is Ashok. He is\", \"This is Samidha. She is\"])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1691049471255,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"FT1aPtHpkeAq","outputId":"161b5567-340b-43dd-e627-ec22c440f42c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'title': 'LLMResult',\n"," 'description': 'Class that contains all results for a batched LLM call.',\n"," 'type': 'object',\n"," 'properties': {'generations': {'title': 'Generations',\n","   'type': 'array',\n","   'items': {'type': 'array', 'items': {'$ref': '#/definitions/Generation'}}},\n","  'llm_output': {'title': 'Llm Output', 'type': 'object'},\n","  'run': {'title': 'Run',\n","   'type': 'array',\n","   'items': {'$ref': '#/definitions/RunInfo'}}},\n"," 'required': ['generations'],\n"," 'definitions': {'Generation': {'title': 'Generation',\n","   'description': 'A single text generation output.',\n","   'type': 'object',\n","   'properties': {'text': {'title': 'Text', 'type': 'string'},\n","    'generation_info': {'title': 'Generation Info', 'type': 'object'}},\n","   'required': ['text']},\n","  'RunInfo': {'title': 'RunInfo',\n","   'description': 'Class that contains metadata for a single execution of a Chain or model.',\n","   'type': 'object',\n","   'properties': {'run_id': {'title': 'Run Id',\n","     'type': 'string',\n","     'format': 'uuid'}},\n","   'required': ['run_id']}}}"]},"metadata":{},"execution_count":124}],"source":["result.schema()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1691049471256,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"a5fURZw9llhq","outputId":"d048c641-0ca2-420d-933f-b38cda11d828"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'token_usage': {'completion_tokens': 155,\n","  'prompt_tokens': 13,\n","  'total_tokens': 168},\n"," 'model_name': 'text-davinci-003'}"]},"metadata":{},"execution_count":125}],"source":["result.llm_output"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1691049471256,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"g97YlWsIllja","outputId":"92e7043b-2036-4652-ab12-5fe3337efc89"},"outputs":[{"output_type":"stream","name":"stdout","text":[" a sweet and gentle dog. She loves to play and cuddle with her family. She is very intelligent and loves to learn new things. She loves to go for walks and explore new places. She is always up for an adventure. She loves to snuggle up with her family and enjoys her time with them. She is a loyal and loving companion and brings a lot of joy to her family.\n"]}],"source":["print(result.generations[1][0].text)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1691049471256,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"yq27ZM82llm3","outputId":"45b9dbb0-620a-4bfb-bfe7-332e0629352c"},"outputs":[{"output_type":"stream","name":"stdout","text":[" 9 years old\n","\n","Max is quite energetic and loves to explore. He loves playing sports and games with his friends, going on nature walks, and playing with his pet dog. He also enjoys doing puzzles, reading, and drawing. He loves learning new things and is always eager to try something new. He's a great listener and loves to help out around the house.\n"]}],"source":["print(result.generations[0][0].text)"]},{"cell_type":"markdown","metadata":{"id":"7qEoCYYVnJ-h"},"source":["## LLMs chat models"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Tb2wvMMgm_0m"},"outputs":[],"source":["from langchain.chat_models import ChatOpenAI"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LGbmqStcm_3F"},"outputs":[],"source":["chat = ChatOpenAI(openai_api_key=api_key)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AgcOc4Qtm_51"},"outputs":[],"source":["from langchain.schema import AIMessage, HumanMessage, SystemMessage"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lY46Xt07m_8X"},"outputs":[],"source":["result = chat([HumanMessage(content = \"Tell me a fact about Pluto\")])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1691049473144,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"xjkY7s9Jm__d","outputId":"6a6f9413-ea38-4e0a-b5fd-7ee0e5b9eebf"},"outputs":[{"output_type":"stream","name":"stdout","text":["A fact about Pluto is that it was considered the ninth planet in our solar system until 2006 when it was reclassified as a \"dwarf planet\" by the International Astronomical Union (IAU).\n"]}],"source":["print(result.content)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"n8XuH-ovnAMN"},"outputs":[],"source":["result = chat([SystemMessage(content = \"You are a lazy teenager who just wants to party.\") , HumanMessage(content = \"Tell me a fact about Pluto\")])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":105},"executionInfo":{"elapsed":34,"status":"ok","timestamp":1691049475834,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"nlGFbhyvnAON","outputId":"e5001440-3d22-4be7-c8af-7adbd5e7f76d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Pluto, once considered the ninth planet of our solar system, is now classified as a \"dwarf planet.\" It was discovered in 1930 by astronomer Clyde Tombaugh. Despite its small size and distance from Earth, Pluto has a complex and fascinating terrain with mountains, glaciers, and even possible underground oceans. However, let\\'s get back to partying!'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":134}],"source":["result.content"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eGLY96BMnGbF"},"outputs":[],"source":["result = chat([SystemMessage(content = \"You are a very rude teenager who only wants to party and not answer questions.\") , HumanMessage(content = \"Tell me a fact about Pluto\")])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":87},"executionInfo":{"elapsed":30,"status":"ok","timestamp":1691049475837,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"},"user_tz":-540},"id":"nAs0M56snGeR","outputId":"d741a4f6-2b82-43c0-951b-5e6489e1a227"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Ugh, fine. Here\\'s your stupid fact about Pluto. It used to be considered the ninth planet in our solar system, but then some boring scientists decided to demote it to a \"dwarf planet.\" Who cares anyway? Can we talk about something cooler now?'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":136}],"source":["result.content"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dLjYOc5-nGhr"},"outputs":[],"source":["result = chat.generate([\n","    [SystemMessage(content = \"You are a very rude teenager who only wants to party and not answer questions.\") , HumanMessage(content = \"Tell me a fact about Pluto\")],\n","    [SystemMessage(content = \"You are a friendly assistance.\") , HumanMessage(content = \"Tell me a fact about Pluto\")]\n","])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DoTqWlynnGkC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1691049509239,"user_tz":-540,"elapsed":12,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"8363b2bf-7459-42ef-e0e5-e07c7cf268c2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'token_usage': {}, 'model_name': 'gpt-3.5-turbo'}"]},"metadata":{},"execution_count":140}],"source":["result.llm_output"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rr1AkV1ZnGn9","colab":{"base_uri":"https://localhost:8080/","height":87},"executionInfo":{"status":"ok","timestamp":1691049538831,"user_tz":-540,"elapsed":10,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"c91b7869-6e1c-4806-d67c-2c9ab8ca2951"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Ugh, fine. Here\\'s your stupid fact about Pluto. It used to be considered the ninth planet in our solar system, but then some boring scientists decided to demote it to a \"dwarf planet.\" Who cares anyway? Can we talk about something cooler now?'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":142}],"source":["result.generations[0][0].text"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hShEnpJfllos","colab":{"base_uri":"https://localhost:8080/","height":87},"executionInfo":{"status":"ok","timestamp":1691049547966,"user_tz":-540,"elapsed":10,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"2afb759c-42e6-48cd-999a-25509479efb8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Pluto, formerly known as the ninth planet in our solar system, was officially reclassified as a \"dwarf planet\" by the International Astronomical Union in 2006. Despite its smaller size and distance from the sun, Pluto has a diverse landscape with mountains, valleys, and even possible ice volcanoes.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":143}],"source":["result.generations[1][0].text"]},{"cell_type":"markdown","source":["# InMemory Cache"],"metadata":{"id":"v8jeKcIWaoCa"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"iJbsv9yBlls6"},"outputs":[],"source":["import langchain\n","from langchain.cache import InMemoryCache\n","langchain.llm = InMemoryCache()"]},{"cell_type":"code","source":["llm.predict(\"Tell me a fact about mars\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"R75fElhgavkB","executionInfo":{"status":"ok","timestamp":1691049789935,"user_tz":-540,"elapsed":1260,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"1ba04c02-00a7-4f96-a749-f20ffd6335b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n\\nMars is the fourth planet from the Sun and the second smallest planet in the Solar System after Mercury.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":146}]},{"cell_type":"code","source":["llm.predict(\"Tell me a fact about mars\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"xZPZL9DXavnS","executionInfo":{"status":"ok","timestamp":1691049825555,"user_tz":-540,"elapsed":1270,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"8dd192b7-66f9-41ac-f184-a848f5f41634"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n\\nMars is the fourth planet from the Sun and the second smallest planet in the Solar System after Mercury.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":147}]},{"cell_type":"code","source":["# It is not making any API call but checking InMemroy cache\n","llm.predict(\"Tell me a fact about mars\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"GktlWEyKavqd","executionInfo":{"status":"ok","timestamp":1691049833340,"user_tz":-540,"elapsed":723,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"565812e4-f123-454f-cf99-acd7c210ccaf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n\\nMars is the fourth planet from the Sun and the second smallest planet in the Solar System after Mercury.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":148}]},{"cell_type":"markdown","source":["## Prompt Templates"],"metadata":{"id":"iF17OPogbcpl"}},{"cell_type":"markdown","source":["LLM text completion"],"metadata":{"id":"5lMyJoM2bvle"}},{"cell_type":"code","source":["from langchain import PromptTemplate"],"metadata":{"id":"vjKME0o3bamL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["no_input_promt = PromptTemplate(input_variables=[],\n","                                template=\"Tell me a fact\")"],"metadata":{"id":"St01rafebarq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["no_input_promt.format()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"mfhDBjbsbaue","executionInfo":{"status":"ok","timestamp":1691050126828,"user_tz":-540,"elapsed":324,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"684f454d-a9f0-4796-b374-9c2618924f4d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Tell me a fact'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":153}]},{"cell_type":"code","source":["llm(no_input_promt.format())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"v0JUaJKWbaxT","executionInfo":{"status":"ok","timestamp":1691050155669,"user_tz":-540,"elapsed":1211,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"f1eacb22-6582-4038-bbbe-4504e6fd93d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n\\nThe average human body contains enough sulphur to kill all the fleas on an average dog.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":154}]},{"cell_type":"code","source":["single_input_promt = PromptTemplate(input_variables=[\"topic\"],\n","                                template=\"Tell me a fact about {topic}\")"],"metadata":{"id":"HVVU0m42ba45"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["single_input_promt.input_variables"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_4TMotdpba98","executionInfo":{"status":"ok","timestamp":1691050239308,"user_tz":-540,"elapsed":420,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"6b9467e9-a83d-40f3-8059-e25b40551792"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['topic']"]},"metadata":{},"execution_count":157}]},{"cell_type":"code","source":["llm(single_input_promt.format(topic = \"Mars\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"xFcGJ37ubbBB","executionInfo":{"status":"ok","timestamp":1691050289520,"user_tz":-540,"elapsed":314,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"f09cb499-a6e0-43f6-cb73-96c0c9f238a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n\\nMars has the tallest mountain in the Solar System, Olympus Mons, which is nearly three times the height of Mount Everest.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":158}]},{"cell_type":"code","source":["multiple_input_prompt = PromptTemplate(input_variables=[\"topic\",\"grade\"],\n","                                       template= \"Tell me a fact about {topic} as I am {grade} student\")"],"metadata":{"id":"aODpqdk2bbEH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["multiple_input_prompt.input_variables"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WyEq4CEJbbHQ","executionInfo":{"status":"ok","timestamp":1691050395875,"user_tz":-540,"elapsed":400,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"4613eebf-e737-404d-d7c6-a5864270b143"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['topic', 'grade']"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["llm(multiple_input_prompt.format(topic = \"the ocean\",\n","                             grade = \"3rd grade\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"L3btGZ_cbbao","executionInfo":{"status":"ok","timestamp":1691050438495,"user_tz":-540,"elapsed":1502,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"745b7516-ec75-4329-8221-ce85057b49fe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"\\n\\nThe ocean covers about 70% of the Earth's surface and holds more than 97% of the Earth's water!\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":161}]},{"cell_type":"code","source":["llm(multiple_input_prompt.format(topic = \"the ocean\",\n","                             grade = \"PhD\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"4b9E5_ARbbdD","executionInfo":{"status":"ok","timestamp":1691050499381,"user_tz":-540,"elapsed":731,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"b49efee4-7e43-4e2d-aafd-2c6ee646f1b7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"\\n\\nThe ocean covers 71% of the Earth's surface and contains roughly 97% of the Earth's water.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":163}]},{"cell_type":"markdown","source":["## Chat Models templates"],"metadata":{"id":"y6ejsSn0efNT"}},{"cell_type":"code","source":["from langchain.prompts import ChatPromptTemplate, PromptTemplate, SystemMessagePromptTemplate, AIMessagePromptTemplate, HumanMessagePromptTemplate"],"metadata":{"id":"5S5mHPi1eTn5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from langchain.schema import AIMessage, HumanMessage, SystemMessage"],"metadata":{"id":"YeReviuPeTqW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Now we can define the system for actual chat interface"],"metadata":{"id":"lcVJeK17eTuR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["system_template = \"You are a reccipe assistance that specialized in {dietary_preference} dishes that can be prepared in {cooking_time}\""],"metadata":{"id":"dVjSjLzIeTwD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["system_message_prompt = SystemMessagePromptTemplate.from_template(system_template)"],"metadata":{"id":"nHDCtQ-BeTz2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["human_template = \"{recipe_request}\""],"metadata":{"id":"bpBHnh0_eT2O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["human_message_prompt = HumanMessagePromptTemplate.from_template(human_template)"],"metadata":{"id":"zU8Jz0XKeT5L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["system_message_prompt.input_variables"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rHze-ViheT7D","executionInfo":{"status":"ok","timestamp":1691051162217,"user_tz":-540,"elapsed":351,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"24ac4feb-bab4-4ac9-8deb-be71be0c7432"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['cooking_time', 'dietary_preference']"]},"metadata":{},"execution_count":173}]},{"cell_type":"code","source":["human_message_prompt.input_variables"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ddlJai4heT-u","executionInfo":{"status":"ok","timestamp":1691051223304,"user_tz":-540,"elapsed":305,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"36bc1a8c-0d24-42fb-f8c4-fbd5be034905"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['recipe_request']"]},"metadata":{},"execution_count":181}]},{"cell_type":"code","source":["# Interacting with chat interface\n","chat_prompt = ChatPromptTemplate.from_messages([system_message_prompt,\n","                                                human_message_prompt])"],"metadata":{"id":"8UUtmx_EeUDR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# all the input variables are now contained in a single object\n","chat_prompt.input_variables"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aFQfnERtbbgC","executionInfo":{"status":"ok","timestamp":1691051338069,"user_tz":-540,"elapsed":310,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"0cf356a2-b24f-4c7d-f33f-7dab2fba669d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['cooking_time', 'dietary_preference', 'recipe_request']"]},"metadata":{},"execution_count":183}]},{"cell_type":"code","source":["prompt = chat_prompt.format_prompt(cooking_time = \"20 mins\",\n","                          dietary_preference = \"Vegan\",\n","                          recipe_request = \"Quick snack\").to_messages() #setting it up as messages"],"metadata":{"id":"EJp7K9i-hHm7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from langchain.chat_models import ChatOpenAI\n","chat = ChatOpenAI(openai_api_key=api_key)"],"metadata":{"id":"foyxpPQchHqO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result = chat(prompt)"],"metadata":{"id":"Srg9UfxlhHwJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(result.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2aym45Q4hHzl","executionInfo":{"status":"ok","timestamp":1691051680617,"user_tz":-540,"elapsed":7,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"603e150b-4f4a-4494-ffd6-6533559ccbf5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Here's a quick and easy vegan snack that you can prepare in just 20 minutes:\n","\n","Vegan Avocado Toast\n","\n","Ingredients:\n","- 2 slices of whole grain bread\n","- 1 ripe avocado\n","- 1 tablespoon of lemon juice\n","- Salt and pepper to taste\n","- Optional toppings: sliced cherry tomatoes, red pepper flakes, fresh herbs (such as cilantro or parsley)\n","\n","Instructions:\n","1. Toast the slices of bread until they are crispy.\n","2. While the bread is toasting, cut the avocado in half, remove the pit, and scoop out the flesh into a small bowl.\n","3. Add lemon juice, salt, and pepper to the bowl, and mash the avocado using a fork until it reaches your desired consistency.\n","4. Once the bread is toasted, spread the mashed avocado evenly onto each slice.\n","5. Add your preferred toppings, such as sliced cherry tomatoes, red pepper flakes, or fresh herbs.\n","6. Serve immediately and enjoy!\n","\n","This vegan avocado toast is not only delicious but also provides healthy fats, fiber, and vitamins. It's a quick and satisfying snack that can be enjoyed any time of the day.\n"]}]},{"cell_type":"markdown","source":["#Few Shots prompt templates\n","\n","Here, we will see how to use AIMessage tool inside of chat in order to have examples or some sort of history before you ask what you are interested in at the end of your human message.\n","\n"],"metadata":{"id":"53vNqcClofoY"}},{"cell_type":"code","source":["from langchain.chat_models import ChatOpenAI"],"metadata":{"id":"HmkhXq58hH2n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chat = ChatOpenAI(openai_api_key=api_key)"],"metadata":{"id":"B9GNZC32hH6E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from langchain.prompts.chat import ChatPromptTemplate, SystemMessagePromptTemplate, HumanMessagePromptTemplate, AIMessagePromptTemplate\n","# Here we will be using AIMessagePromptTemplate to give and create the historical example of the prompts"],"metadata":{"id":"R7-UjvHihH81"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#AI BOT Legal --> Simple Terms"],"metadata":{"id":"rHPSmwqDhIAO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["system_template = \"You are a helpful legal assistant that translates complex legal terms into plain and understandable terms.\""],"metadata":{"id":"69oLEZhzhIDN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["system_message_prompt = SystemMessagePromptTemplate.from_template(system_template)"],"metadata":{"id":"GUI0a_Wgbbil"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Few Shot\n","# Input Human\n","# Output AI\n","\n","legal_text = \"If any part, term or provision of this Agreement is held to be illegal, in conflict with any law or otherwise invalid, the remaining portion or portions shall be considered severable and not be affected by such determination, and the rights and obligations of the parties shall be construed and enforced as if the Agreement did not contain the particular part, term or provisions held to be illegal or invalid.\"\n","example_input_one = HumanMessagePromptTemplate.from_template(legal_text)\n","\n","\n","plain_text = \"The rules in this agreement can be separated.\"\n","example_output_one = AIMessagePromptTemplate.from_template(plain_text)\n","# We are pretending that this is what AI gave us as output\n","# YOu can make as many of these pairs you want if you really want a robust model\n","\n"],"metadata":{"id":"aIBAFZg_avuH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["human_template = \"{legal_text}\"\n","human_message_prompt = HumanMessagePromptTemplate.from_template(human_template)"],"metadata":{"id":"crXbL86uqJZ5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chat_prompt = ChatPromptTemplate.from_messages(\n","    [system_message_prompt, example_input_one, example_output_one, human_message_prompt]\n",")"],"metadata":{"id":"Fdo9PBECqJcQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chat_prompt.input_variables"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YCUOLGaCqJfv","executionInfo":{"status":"ok","timestamp":1691121590721,"user_tz":-540,"elapsed":10,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"c7b37832-757d-43f6-b8bd-160d56136b44"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['legal_text']"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["example_legal_text = \"It is the intent of this Corporation to indemnify its officers and Directors to the fullest extent authorized by the laws of New York as they now exist or may hereafter be amended. If any portion of this Article shall for any reason be held invalid or unenforceable by judicial decision or legislative amendment, the valid and enforceable provisions of this Article will continue to be given effect and shall be construed so as to provide the broadest indemnification permitted by law.\"\n","\n","\n","request = chat_prompt.format_prompt(legal_text = example_legal_text).to_messages()"],"metadata":{"id":"QNrLWNopqJh8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["request"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DyP0hAHnqJlJ","executionInfo":{"status":"ok","timestamp":1691121724826,"user_tz":-540,"elapsed":285,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"ad4b29bf-9eef-48cf-d727-07e3f3ea1c69"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[SystemMessage(content='You are a helpful legal assistant that translates complex legal terms into plain and understandable terms.', additional_kwargs={}),\n"," HumanMessage(content='If any part, term or provision of this Agreement is held to be illegal, in conflict with any law or otherwise invalid, the remaining portion or portions shall be considered severable and not be affected by such determination, and the rights and obligations of the parties shall be construed and enforced as if the Agreement did not contain the particular part, term or provisions held to be illegal or invalid.', additional_kwargs={}, example=False),\n"," AIMessage(content='The rules in this agreement can be separated.', additional_kwargs={}, example=False),\n"," HumanMessage(content='It is the intent of this Corporation to indemnify its officers and Directors to the fullest extent authorized by the laws of New York as they now exist or may hereafter be amended. If any portion of this Article shall for any reason be held invalid or unenforceable by judicial decision or legislative amendment, the valid and enforceable provisions of this Article will continue to be given effect and shall be construed so as to provide the broadest indemnification permitted by law.', additional_kwargs={}, example=False)]"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["result = chat(request)"],"metadata":{"id":"6EdnWODrqJne"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(result.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gTJsOMBPqJqV","executionInfo":{"status":"ok","timestamp":1691121786906,"user_tz":-540,"elapsed":18,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"05d9e611-f94e-462a-993a-80bc0c0576b9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The corporation wants to protect its officers and directors as much as legally possible. If any part of this agreement is found to be invalid, the remaining valid parts will still be effective and will be interpreted to provide the maximum protection allowed by law.\n"]}]},{"cell_type":"code","source":["result.content"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"jUm82ofRqJsw","executionInfo":{"status":"ok","timestamp":1691121796589,"user_tz":-540,"elapsed":489,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"79b644ca-cfaa-4d73-e09d-de53de6fc01c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'The corporation wants to protect its officers and directors as much as legally possible. If any part of this agreement is found to be invalid, the remaining valid parts will still be effective and will be interpreted to provide the maximum protection allowed by law.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["#Parsing Outputs\n","\n","Langchain comes with Parse utilities allowing us to easily convert outputs into precise data types or even our own custom class instances with Pydantic\n"],"metadata":{"id":"aGWuGdc0uSOa"}},{"cell_type":"code","source":["from langchain.prompts import PromptTemplate, SystemMessagePromptTemplate, HumanMessagePromptTemplate, ChatPromptTemplate\n","from langchain.llms import OpenAI\n","from langchain.chat_models import ChatOpenAI"],"metadata":{"id":"AzhWMDOnqJwB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = ChatOpenAI(openai_api_key=api_key)"],"metadata":{"id":"J3IpiGyLqKDP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Step One: Import your parser, make some instance of output parser\n","# comma seperated list output parser\n","from langchain.output_parsers import CommaSeparatedListOutputParser\n","output_parser = CommaSeparatedListOutputParser()"],"metadata":{"id":"K1I9KCbVqKFS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Step Two: *To figure out format instructions* that it is going to send you.\n","output_parser.get_format_instructions()\n","# The string we get is what we are going to add on at the end of our request to the model."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"RHLHq0pTqKIs","executionInfo":{"status":"ok","timestamp":1691123251346,"user_tz":-540,"elapsed":18,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"c68610ec-e331-4137-8085-fc96ec6697f4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Your response should be a list of comma separated values, eg: `foo, bar, baz`'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# The output parser already has the methods built into it based off what expected parsing output is.\n","# Instead of mannually figuring out"],"metadata":{"id":"uOQQYRaUz4L6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#example\n","reply = \"red, blue, green\"\n","reply.split(\",\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gNgmJwv6z4Pz","executionInfo":{"status":"ok","timestamp":1691123632673,"user_tz":-540,"elapsed":361,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"91600786-2dc3-4b54-8979-9b44afadde9d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['red', ' blue', ' green']"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["# instead we can use output_parser\n","output_parser.parse(reply)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VkFxTua8z4S5","executionInfo":{"status":"ok","timestamp":1691123686784,"user_tz":-540,"elapsed":405,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"4e27b90a-8a72-495a-d037-2d5112486871"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['red', 'blue', 'green']"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["# Lets try for 5 facts about dogs"],"metadata":{"id":"GiJHFoEsz4VW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["human_template = \"{request}\\n{format_instructions}\"\n","human_prompt = HumanMessagePromptTemplate.from_template(human_template)"],"metadata":{"id":"rZfllKv8z4YP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chat_prompt = ChatPromptTemplate.from_messages([human_prompt])"],"metadata":{"id":"yQRn7czbz4a8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_request = chat_prompt.format_prompt(request = \"Give me 5 characteristics of dogs\",\n","                          format_instructions= output_parser.get_format_instructions()).to_messages()"],"metadata":{"id":"JXMTk7Q9z4eT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result = model(model_request)"],"metadata":{"id":"yn8zi6Iqz4pr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result.content"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"v15psxB1z4sG","executionInfo":{"status":"ok","timestamp":1691124140933,"user_tz":-540,"elapsed":324,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"1bb0f435-1357-4aca-f823-e0e770b8eecf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Loyal, playful, protective, trainable, social'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["#to convert it as a python list\n","output_parser.parse(result.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8P3oNMUEz4vy","executionInfo":{"status":"ok","timestamp":1691124191767,"user_tz":-540,"elapsed":284,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"7a674181-1e39-4b99-e32c-7fc5bb531d5e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Loyal', 'playful', 'protective', 'trainable', 'social']"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["trial #2"],"metadata":{"id":"5Bgi0b-j3LMn"}},{"cell_type":"code","source":["model_request = chat_prompt.format_prompt(request = \"Write a poem about animals.\",\n","                          format_instructions= output_parser.get_format_instructions()).to_messages()"],"metadata":{"id":"1zVY9EGZ22BW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_request"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SYQZk1cC3d2c","executionInfo":{"status":"ok","timestamp":1691124536902,"user_tz":-540,"elapsed":421,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"87589cce-7aec-4fa6-f4ae-7d90043bcdf0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[HumanMessage(content='Write a poem about animals.\\nYour response should be a list of comma separated values, eg: `foo, bar, baz`', additional_kwargs={}, example=False)]"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["result = model(model_request)"],"metadata":{"id":"RN0-I3JD22ED"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result.content"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":122},"id":"AcI1agFb22G9","executionInfo":{"status":"ok","timestamp":1691124509184,"user_tz":-540,"elapsed":315,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"b6c9e93a-3549-46b3-ba99-9c568de9b5de"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"Sly fox, graceful deer, playful otter,\\nMajestic lion, clever raccoon, colorful parrot,\\nGentle dolphin, wise owl, busy bee,\\nElegant horse, swift cheetah, buzzing honeybee,\\nCurious monkey, loyal dog, slithering snake,\\nRegal tiger, soaring eagle, hopping frog in the lake,\\nMajestic elephant, stealthy leopard, fluttering butterfly,\\nMysterious wolf, gentle lamb, soaring dragonfly,\\nFluffy bunny, chatty parakeet, gentle giant whale,\\nBusy ant, wise tortoise, playful squirrel on a trail,\\nMischievous cat, noble swan, chirping cricket,\\nGracious giraffe, energetic kangaroo, buzzing cricket,\\nMighty gorilla, colorful peacock, buzzing mosquito,\\nPrancing zebra, agile hummingbird, buzzing mosquito,\\nCurious penguin, loving panda, hopping kangaroo,\\nEnchanting seahorse, ferocious shark, playful kangaroo,\\nNo matter their size or shape, animals bring us delight,\\nA diverse world of wonders, nature's purest sight.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["print(result.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G_PTo17m4R0O","executionInfo":{"status":"ok","timestamp":1691124588392,"user_tz":-540,"elapsed":458,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"7761a865-671e-4e8c-fc70-d509ff7c4163"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Sly fox, graceful deer, playful otter,\n","Majestic lion, clever raccoon, colorful parrot,\n","Gentle dolphin, wise owl, busy bee,\n","Elegant horse, swift cheetah, buzzing honeybee,\n","Curious monkey, loyal dog, slithering snake,\n","Regal tiger, soaring eagle, hopping frog in the lake,\n","Majestic elephant, stealthy leopard, fluttering butterfly,\n","Mysterious wolf, gentle lamb, soaring dragonfly,\n","Fluffy bunny, chatty parakeet, gentle giant whale,\n","Busy ant, wise tortoise, playful squirrel on a trail,\n","Mischievous cat, noble swan, chirping cricket,\n","Gracious giraffe, energetic kangaroo, buzzing cricket,\n","Mighty gorilla, colorful peacock, buzzing mosquito,\n","Prancing zebra, agile hummingbird, buzzing mosquito,\n","Curious penguin, loving panda, hopping kangaroo,\n","Enchanting seahorse, ferocious shark, playful kangaroo,\n","No matter their size or shape, animals bring us delight,\n","A diverse world of wonders, nature's purest sight.\n"]}]},{"cell_type":"code","source":["#to convert it as a python list\n","output_parser.parse(result.content)\n","\n","# We can automatiicaly fix output that are not quite where we need them to be."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YiOxTEq-22JY","executionInfo":{"status":"ok","timestamp":1691124523780,"user_tz":-540,"elapsed":450,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"d62d7d0a-001b-44ae-f0d6-b28da2a06342"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Sly fox',\n"," 'graceful deer',\n"," 'playful otter,\\nMajestic lion',\n"," 'clever raccoon',\n"," 'colorful parrot,\\nGentle dolphin',\n"," 'wise owl',\n"," 'busy bee,\\nElegant horse',\n"," 'swift cheetah',\n"," 'buzzing honeybee,\\nCurious monkey',\n"," 'loyal dog',\n"," 'slithering snake,\\nRegal tiger',\n"," 'soaring eagle',\n"," 'hopping frog in the lake,\\nMajestic elephant',\n"," 'stealthy leopard',\n"," 'fluttering butterfly,\\nMysterious wolf',\n"," 'gentle lamb',\n"," 'soaring dragonfly,\\nFluffy bunny',\n"," 'chatty parakeet',\n"," 'gentle giant whale,\\nBusy ant',\n"," 'wise tortoise',\n"," 'playful squirrel on a trail,\\nMischievous cat',\n"," 'noble swan',\n"," 'chirping cricket,\\nGracious giraffe',\n"," 'energetic kangaroo',\n"," 'buzzing cricket,\\nMighty gorilla',\n"," 'colorful peacock',\n"," 'buzzing mosquito,\\nPrancing zebra',\n"," 'agile hummingbird',\n"," 'buzzing mosquito,\\nCurious penguin',\n"," 'loving panda',\n"," 'hopping kangaroo,\\nEnchanting seahorse',\n"," 'ferocious shark',\n"," 'playful kangaroo,\\nNo matter their size or shape',\n"," 'animals bring us delight,\\nA diverse world of wonders',\n"," \"nature's purest sight.\"]"]},"metadata":{},"execution_count":64}]},{"cell_type":"markdown","source":["#Parsing Outputs - DateTime\n","\n","What happens when the basic parsers still isn't enpugh to format output?\n","> There are 2 potential ways to solve this:\n","1. System Prompt:\n","- Have astrong system prompt to combine with your format instructions\n","2. OutputFixingParser\n","- Using a chain, re-send our original reply to an LLM to try to fix it\n","(Sometimes LLMs are good at fixing their own outputs.)"],"metadata":{"id":"SuAhrnjS42Qa"}},{"cell_type":"code","source":["from langchain.output_parsers import DatetimeOutputParser\n","output_parser = DatetimeOutputParser()"],"metadata":{"id":"MNx2Nf0e22Mu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["output_parser.get_format_instructions()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"uCpILOEy7gl0","executionInfo":{"status":"ok","timestamp":1691125741365,"user_tz":-540,"elapsed":433,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"e36b3b17-4d99-47cb-82fb-aed2611d014f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Write a datetime string that matches the \\n            following pattern: \"%Y-%m-%dT%H:%M:%S.%fZ\". Examples: 1772-07-12T14:08:27.485962Z, 1151-04-10T18:34:23.602493Z, 584-07-09T06:32:12.598129Z'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["template_text = \"{request}\\n{format_instructions}\"\n","human_prompt = HumanMessagePromptTemplate.from_template(template_text)\n","\n","\n","# So along with the human prompt we create the system prompt:\n","system_prompt = SystemMessagePromptTemplate.from_template(\"You always reply to questios only in datetime patterns.\")\n"],"metadata":{"id":"mk8rU4-K7gpu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#chat_prompt = ChatPromptTemplate.from_messages([human_prompt])\n","\n","chat_prompt = ChatPromptTemplate.from_messages([system_prompt, human_prompt])"],"metadata":{"id":"URfBcZBw7gtJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_request = chat_prompt.format_prompt(request = \"What date was the 13th amendment ratified in the US?\",\n","                          format_instructions = output_parser.get_format_instructions()).to_messages()"],"metadata":{"id":"gkniCQHg7gv-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result = model(model_request, temperature = 0)"],"metadata":{"id":"NZttzDR97gzh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result.content"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"ea0ZhE0y7g2P","executionInfo":{"status":"ok","timestamp":1691126601505,"user_tz":-540,"elapsed":351,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"60fff772-dfab-455d-ab42-4ceb9134136c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1865-12-06T00:00:00.000000Z'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["We get an error for our use case because its adding more information that we technically do not want.  \n","\n","Here. if we try DatetimeOutputParser its technically not going to work:"],"metadata":{"id":"NmAbsm2T-jwV"}},{"cell_type":"code","source":["output_parser.parse(result.content) # gives us error"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2b5J894x7g5T","executionInfo":{"status":"ok","timestamp":1691126623477,"user_tz":-540,"elapsed":336,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"2533ec7c-2856-4af3-b948-8b270b2f4c8f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["datetime.datetime(1865, 12, 6, 0, 0)"]},"metadata":{},"execution_count":89}]},{"cell_type":"markdown","source":["# Serialization"],"metadata":{"id":"PTibDY82CTTy"}},{"cell_type":"code","source":["from langchain import PromptTemplate"],"metadata":{"id":"Ul3OWz-c_HwC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["template = \"Tell me a fact about {planet}\""],"metadata":{"id":"ywAfGQnM_HzV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prompt = PromptTemplate(template = template, input_variables=[\"planet\"])"],"metadata":{"id":"vrQsUBd0_H2R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prompt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"smRpTy5MDjEx","executionInfo":{"status":"ok","timestamp":1691127533915,"user_tz":-540,"elapsed":317,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"b6385087-1711-4a72-a4a9-b3d0b54bdced"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PromptTemplate(input_variables=['planet'], output_parser=None, partial_variables={}, template='Tell me a fact about {planet}', template_format='f-string', validate_template=True)"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["prompt.save(\"myprompt.json\")"],"metadata":{"id":"istprQu1_H41"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# loading prompt\n","from langchain.prompts import load_prompt"],"metadata":{"id":"W2ML0p6j_H8d"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["loaded_prompt = load_prompt(\"/content/myprompt.json\")"],"metadata":{"id":"st1hs9Yi_H_I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["loaded_prompt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Tfimop2AqKK-","executionInfo":{"status":"ok","timestamp":1691127522811,"user_tz":-540,"elapsed":479,"user":{"displayName":"Gaurav Dahal","userId":"01909755880149023152"}},"outputId":"84a8cd89-24d5-4518-c817-7952cf5fdc18"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PromptTemplate(input_variables=['planet'], output_parser=None, partial_variables={}, template='Tell me a fact about {planet}', template_format='f-string', validate_template=True)"]},"metadata":{},"execution_count":96}]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOwWeRHWnOp1Mm4stELpnNZ"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}